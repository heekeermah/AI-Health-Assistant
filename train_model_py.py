# -*- coding: utf-8 -*-
"""train_model.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1m_BX4dct1UvHHddihjgAw6y03FS1CxJm
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import MultiLabelBinarizer
import joblib

# Load the dataset
df = pd.read_csv('DiseaseAndSymptoms.csv')

#Drop unneeded symptom columns
cols_to_drop = [f'Symptom_{i}' for i in range(4, 18)]
df = df.drop(columns=[col for col in cols_to_drop if col in df.columns])

# Remove duplicates
df.drop_duplicates(inplace=True)

# Combine symptoms into a list
symptom_cols = [col for col in df.columns if 'Symptom_' in col]
df['Symptoms'] = df[symptom_cols].apply(lambda row: [s for s in row if pd.notna(s)], axis=1)

# Multi-label binarization
mlb = MultiLabelBinarizer()
symptom_encoded = mlb.fit_transform(df['Symptoms'])

# Create DataFrame
X = pd.DataFrame(symptom_encoded, columns=mlb.classes_)
y = df['Disease']

# Train model
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LogisticRegression(max_iter=1000)
model.fit(X_train, y_train)

# Save model and symptom list
joblib.dump(model, 'model.pkl')
joblib.dump(mlb.classes_, 'symptom_labels.pkl')